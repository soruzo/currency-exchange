name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Run tests
      run: npm run test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USERNAME: your_test_username
        POSTGRES_PASSWORD: your_test_password
        POSTGRES_DATABASE: your_test_database

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install and configure AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        AWS_CLI_VERSION=$(aws --version 2>&1)
        echo "AWS CLI Version: $AWS_CLI_VERSION"
        
    - name: Deploy to Elastic Beanstalk
      run: |
        npm run build
        zip -r deploy.zip . -x '.git' 'node_modules/*'
        aws s3 cp deploy.zip s3://elasticbeanstalk-us-east-1-048448546086/deploy.zip
        aws elasticbeanstalk create-application-version --application-name currency-exchange-01 --version-label ${{ github.sha }} --source-bundle S3Bucket=elasticbeanstalk-us-east-1-048448546086,S3Key=deploy.zip
        aws elasticbeanstalk update-environment --environment-name Currencyexchange01-env --version-label ${{ github.sha }}
